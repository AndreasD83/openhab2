rule "Wohnzimmer runter"
when
    Item WohnzimmerDown changed from OFF to ON
then
	sendCommand(JalousieWohnzimmerGrossDown, ON)
	sendCommand(JalousieWohnzimmerKleinDown, ON)
	sendCommand(JalousieWohnzimmerTuerDown, ON)
	
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieWohnzimmerGrossDown, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieWohnzimmerKleinDown, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieWohnzimmerTuerDown, OFF) ]
end

rule "Wohnzimmer hoch"
when
    Item WohnzimmerUp changed from OFF to ON
then
	sendCommand(JalousieWohnzimmerGrossUp, ON)
	sendCommand(JalousieWohnzimmerKleinUp, ON)
	sendCommand(JalousieWohnzimmerTuerUp, ON)
	
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieWohnzimmerGrossUp, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieWohnzimmerKleinUp, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieWohnzimmerTuerUp, OFF) ]
end

rule "Unten runter"
when
    Item UntenDown changed from OFF to ON
then
	sendCommand(WohnzimmerDown, ON)
	sendCommand(JalousieKuecheDown, ON)
	
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieKuecheDown, OFF) ]
end

rule "Unten hoch"
when
    Item UntenUp changed from OFF to ON
then
	sendCommand(WohnzimmerUp, ON)
	sendCommand(JalousieKuecheUp, ON)
	
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieKuecheUp, OFF) ]
end


rule "Oben runter"
when
    Item ObenDown changed from OFF to ON
then
	sendCommand(JalousieElternDown, ON)
	sendCommand(JalousieAnnikaDown, ON)
	sendCommand(JalousieBueroDown, ON)
	
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieElternDown, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieAnnikaDown, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieBueroDown, OFF) ]
end

rule "Oben hoch"
when
    Item ObenUp changed from OFF to ON
then
	sendCommand(JalousieElternUp, ON)
	sendCommand(JalousieAnnikaUp, ON)
	sendCommand(JalousieBueroUp, ON)
	
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieElternUp, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieAnnikaUp, OFF) ]
	createTimer(now.plusSeconds(2)) [| sendCommand(JalousieBueroUp, OFF) ]
end

rule "oben Licht an"
when 
	Item TasterObenOn changed from OFF to ON
then
		if (LichtBuero.state == OFF) {
			sendCommand(LichtBuero, ON)
		}
		if (LichtAnnika.state == OFF) {{
			sendCommand(LichtAnnika, ON)
		}
		if (LichtSchlafzimmer.state == OFF) {
			if (TasterSchlafzimmer.state == OFF) {
				sendCommand(TasterSchlafzimmer, ON)
			} else{
				sendCommand(TasterSchlafzimmer, OFF)
			}
		}
		if (LichtFlurOG.state == OFF) {
			if (TasterFlurOG.state == OFF) {
				sendCommand(TasterFlurOG, ON)
			} else{
				sendCommand(TasterFlurOG, OFF)
			}
		}
end

rule "oben Licht aus"
when 
	Item TasterObenOff changed from OFF to ON
then
		if (LichtBuero.state == ON) {
			if (TasterBuero.state == OFF) {
				sendCommand(TasterBuero, ON)
			} else{
				sendCommand(TasterBuero, OFF)
			}
		}
		if (LichtAnnika.state == ON) {
			if (TasterAnnika.state == OFF) {
				sendCommand(TasterAnnika, ON)
			} else{
				sendCommand(TasterAnnika, OFF)
			}
		}
		if (LichtSchlafzimmer.state == ON) {
			if (TasterSchlafzimmer.state == OFF) {
				sendCommand(TasterSchlafzimmer, ON)
			} else{
				sendCommand(TasterSchlafzimmer, OFF)
			}
		}
		if (LichtFlurOG.state == ON) {
			if (TasterFlurOG.state == OFF) {
				sendCommand(TasterFlurOG, ON)
			} else{
				sendCommand(TasterFlurOG, OFF)
			}
		}
end

rule "Wohnzimmer"
when 
	Item TasterWohnzimmer changed from OFF to ON
then
		if (TasterWohnzimmerSofaecke.state == OFF) {
			sendCommand(TasterWohnzimmerSofaecke, ON)
		} else{
			sendCommand(TasterWohnzimmerSofaecke, OFF)
		}
		if (TasterWohnzimmerMitte.state == OFF) {
			sendCommand(TasterWohnzimmerMitte, ON)
		} else{
			sendCommand(TasterWohnzimmerMitte, OFF)
		}	
end

rule "unten List"
when 
	Item TasterUnten changed from OFF to ON
then
		sendCommand(TasterWohnzimmer, ON)
		
		if (TasterFlurEG.state == OFF) {
			sendCommand(TasterFlurEG, ON)
		} else{
			sendCommand(TasterFlurEG, OFF)
		}	
		
		if (TasterKueche.state == OFF) {
			sendCommand(TasterKueche, ON)
		} else{
			sendCommand(TasterKueche, OFF)
		}
end
